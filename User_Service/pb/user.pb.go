// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: proto/user.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName string `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName   string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Age        uint64 `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Gender     string `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Email      string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Phone      string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Account    string `protobuf:"bytes,8,opt,name=account,proto3" json:"account,omitempty"`
	UserName   string `protobuf:"bytes,9,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password   string `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SaveUserRequest) Reset() {
	*x = SaveUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserRequest) ProtoMessage() {}

func (x *SaveUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserRequest.ProtoReflect.Descriptor instead.
func (*SaveUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{0}
}

func (x *SaveUserRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *SaveUserRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *SaveUserRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *SaveUserRequest) GetAge() uint64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *SaveUserRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *SaveUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SaveUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SaveUserRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SaveUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SaveUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SaveUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SaveUserResponse) Reset() {
	*x = SaveUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserResponse) ProtoMessage() {}

func (x *SaveUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserResponse.ProtoReflect.Descriptor instead.
func (*SaveUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{1}
}

func (x *SaveUserResponse) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FindUserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *FindUserByEmailRequest) Reset() {
	*x = FindUserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByEmailRequest) ProtoMessage() {}

func (x *FindUserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByEmailRequest.ProtoReflect.Descriptor instead.
func (*FindUserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{2}
}

func (x *FindUserByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type FindUserByEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Age         uint64 `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Email       string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Password    string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Verified    bool   `protobuf:"varint,8,opt,name=verified,proto3" json:"verified,omitempty"`
	BlockStatus bool   `protobuf:"varint,9,opt,name=block_status,json=blockStatus,proto3" json:"block_status,omitempty"`
}

func (x *FindUserByEmailResponse) Reset() {
	*x = FindUserByEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByEmailResponse) ProtoMessage() {}

func (x *FindUserByEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByEmailResponse.ProtoReflect.Descriptor instead.
func (*FindUserByEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{3}
}

func (x *FindUserByEmailResponse) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FindUserByEmailResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *FindUserByEmailResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *FindUserByEmailResponse) GetAge() uint64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *FindUserByEmailResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FindUserByEmailResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *FindUserByEmailResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FindUserByEmailResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *FindUserByEmailResponse) GetBlockStatus() bool {
	if x != nil {
		return x.BlockStatus
	}
	return false
}

// update user verify
type UpdateUserVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateUserVerifyRequest) Reset() {
	*x = UpdateUserVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserVerifyRequest) ProtoMessage() {}

func (x *UpdateUserVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserVerifyRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserVerifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserVerifyRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// find user by phone
type FindUserByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *FindUserByPhoneRequest) Reset() {
	*x = FindUserByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByPhoneRequest) ProtoMessage() {}

func (x *FindUserByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByPhoneRequest.ProtoReflect.Descriptor instead.
func (*FindUserByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{5}
}

func (x *FindUserByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type FindUserByPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Age         uint64 `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Email       string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Password    string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Verified    bool   `protobuf:"varint,8,opt,name=verified,proto3" json:"verified,omitempty"`
	BlockStatus bool   `protobuf:"varint,9,opt,name=block_status,json=blockStatus,proto3" json:"block_status,omitempty"`
}

func (x *FindUserByPhoneResponse) Reset() {
	*x = FindUserByPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByPhoneResponse) ProtoMessage() {}

func (x *FindUserByPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByPhoneResponse.ProtoReflect.Descriptor instead.
func (*FindUserByPhoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{6}
}

func (x *FindUserByPhoneResponse) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FindUserByPhoneResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *FindUserByPhoneResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *FindUserByPhoneResponse) GetAge() uint64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *FindUserByPhoneResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FindUserByPhoneResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *FindUserByPhoneResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FindUserByPhoneResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *FindUserByPhoneResponse) GetBlockStatus() bool {
	if x != nil {
		return x.BlockStatus
	}
	return false
}

// save user  .//PartnerService
type SavePartnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FIRSTNAME               string `protobuf:"bytes,1,opt,name=FIRSTNAME,proto3" json:"FIRSTNAME,omitempty"`
	MIDDLENAME              string `protobuf:"bytes,2,opt,name=MIDDLENAME,proto3" json:"MIDDLENAME,omitempty"`
	LASTNAME                string `protobuf:"bytes,3,opt,name=LASTNAME,proto3" json:"LASTNAME,omitempty"`
	MOBILE                  string `protobuf:"bytes,4,opt,name=MOBILE,proto3" json:"MOBILE,omitempty"`
	ACCOUNTNO               string `protobuf:"bytes,5,opt,name=ACCOUNTNO,proto3" json:"ACCOUNTNO,omitempty"`
	WITHDRAWALREQUESTTYPEID uint64 `protobuf:"varint,6,opt,name=WITHDRAWALREQUESTTYPEID,proto3" json:"WITHDRAWALREQUESTTYPEID,omitempty"`
	AGE                     uint64 `protobuf:"varint,7,opt,name=AGE,proto3" json:"AGE,omitempty"`
	GENDER                  string `protobuf:"bytes,8,opt,name=GENDER,proto3" json:"GENDER,omitempty"`
	EMAIL                   string `protobuf:"bytes,9,opt,name=EMAIL,proto3" json:"EMAIL,omitempty"`
	USERNAME                string `protobuf:"bytes,10,opt,name=USERNAME,proto3" json:"USERNAME,omitempty"`
	PASSWORD                string `protobuf:"bytes,11,opt,name=PASSWORD,proto3" json:"PASSWORD,omitempty"`
}

func (x *SavePartnerRequest) Reset() {
	*x = SavePartnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePartnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePartnerRequest) ProtoMessage() {}

func (x *SavePartnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePartnerRequest.ProtoReflect.Descriptor instead.
func (*SavePartnerRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{7}
}

func (x *SavePartnerRequest) GetFIRSTNAME() string {
	if x != nil {
		return x.FIRSTNAME
	}
	return ""
}

func (x *SavePartnerRequest) GetMIDDLENAME() string {
	if x != nil {
		return x.MIDDLENAME
	}
	return ""
}

func (x *SavePartnerRequest) GetLASTNAME() string {
	if x != nil {
		return x.LASTNAME
	}
	return ""
}

func (x *SavePartnerRequest) GetMOBILE() string {
	if x != nil {
		return x.MOBILE
	}
	return ""
}

func (x *SavePartnerRequest) GetACCOUNTNO() string {
	if x != nil {
		return x.ACCOUNTNO
	}
	return ""
}

func (x *SavePartnerRequest) GetWITHDRAWALREQUESTTYPEID() uint64 {
	if x != nil {
		return x.WITHDRAWALREQUESTTYPEID
	}
	return 0
}

func (x *SavePartnerRequest) GetAGE() uint64 {
	if x != nil {
		return x.AGE
	}
	return 0
}

func (x *SavePartnerRequest) GetGENDER() string {
	if x != nil {
		return x.GENDER
	}
	return ""
}

func (x *SavePartnerRequest) GetEMAIL() string {
	if x != nil {
		return x.EMAIL
	}
	return ""
}

func (x *SavePartnerRequest) GetUSERNAME() string {
	if x != nil {
		return x.USERNAME
	}
	return ""
}

func (x *SavePartnerRequest) GetPASSWORD() string {
	if x != nil {
		return x.PASSWORD
	}
	return ""
}

type SavePartnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PARTNERID uint64 `protobuf:"varint,1,opt,name=PARTNERID,proto3" json:"PARTNERID,omitempty"`
}

func (x *SavePartnerResponse) Reset() {
	*x = SavePartnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePartnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePartnerResponse) ProtoMessage() {}

func (x *SavePartnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePartnerResponse.ProtoReflect.Descriptor instead.
func (*SavePartnerResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{8}
}

func (x *SavePartnerResponse) GetPARTNERID() uint64 {
	if x != nil {
		return x.PARTNERID
	}
	return 0
}

// find user by email
type FindPartnerEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EMAIL string `protobuf:"bytes,1,opt,name=EMAIL,proto3" json:"EMAIL,omitempty"`
}

func (x *FindPartnerEmailRequest) Reset() {
	*x = FindPartnerEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPartnerEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPartnerEmailRequest) ProtoMessage() {}

func (x *FindPartnerEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPartnerEmailRequest.ProtoReflect.Descriptor instead.
func (*FindPartnerEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{9}
}

func (x *FindPartnerEmailRequest) GetEMAIL() string {
	if x != nil {
		return x.EMAIL
	}
	return ""
}

type FindPartnerByEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PARTNERID   uint64 `protobuf:"varint,1,opt,name=PARTNERID,proto3" json:"PARTNERID,omitempty"`
	FIRSTNAME   string `protobuf:"bytes,2,opt,name=FIRSTNAME,proto3" json:"FIRSTNAME,omitempty"`
	MIDDLENAME  string `protobuf:"bytes,3,opt,name=MIDDLENAME,proto3" json:"MIDDLENAME,omitempty"`
	LASTNAME    string `protobuf:"bytes,4,opt,name=LASTNAME,proto3" json:"LASTNAME,omitempty"`
	MOBILE      string `protobuf:"bytes,5,opt,name=MOBILE,proto3" json:"MOBILE,omitempty"`
	ACCOUNTNO   string `protobuf:"bytes,6,opt,name=ACCOUNTNO,proto3" json:"ACCOUNTNO,omitempty"`
	AGE         uint64 `protobuf:"varint,7,opt,name=AGE,proto3" json:"AGE,omitempty"`
	GENDER      string `protobuf:"bytes,8,opt,name=GENDER,proto3" json:"GENDER,omitempty"`
	Account     string `protobuf:"bytes,9,opt,name=account,proto3" json:"account,omitempty"`
	EMAIL       string `protobuf:"bytes,10,opt,name=EMAIL,proto3" json:"EMAIL,omitempty"`
	USERNAME    string `protobuf:"bytes,11,opt,name=USERNAME,proto3" json:"USERNAME,omitempty"`
	PASSWORD    string `protobuf:"bytes,12,opt,name=PASSWORD,proto3" json:"PASSWORD,omitempty"`
	ISACTIVE    bool   `protobuf:"varint,13,opt,name=ISACTIVE,proto3" json:"ISACTIVE,omitempty"`
	ISBLOCKED   bool   `protobuf:"varint,14,opt,name=ISBLOCKED,proto3" json:"ISBLOCKED,omitempty"`
	ISBLACKLIST bool   `protobuf:"varint,15,opt,name=ISBLACKLIST,proto3" json:"ISBLACKLIST,omitempty"`
}

func (x *FindPartnerByEmailResponse) Reset() {
	*x = FindPartnerByEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPartnerByEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPartnerByEmailResponse) ProtoMessage() {}

func (x *FindPartnerByEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPartnerByEmailResponse.ProtoReflect.Descriptor instead.
func (*FindPartnerByEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{10}
}

func (x *FindPartnerByEmailResponse) GetPARTNERID() uint64 {
	if x != nil {
		return x.PARTNERID
	}
	return 0
}

func (x *FindPartnerByEmailResponse) GetFIRSTNAME() string {
	if x != nil {
		return x.FIRSTNAME
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetMIDDLENAME() string {
	if x != nil {
		return x.MIDDLENAME
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetLASTNAME() string {
	if x != nil {
		return x.LASTNAME
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetMOBILE() string {
	if x != nil {
		return x.MOBILE
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetACCOUNTNO() string {
	if x != nil {
		return x.ACCOUNTNO
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetAGE() uint64 {
	if x != nil {
		return x.AGE
	}
	return 0
}

func (x *FindPartnerByEmailResponse) GetGENDER() string {
	if x != nil {
		return x.GENDER
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetEMAIL() string {
	if x != nil {
		return x.EMAIL
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetUSERNAME() string {
	if x != nil {
		return x.USERNAME
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetPASSWORD() string {
	if x != nil {
		return x.PASSWORD
	}
	return ""
}

func (x *FindPartnerByEmailResponse) GetISACTIVE() bool {
	if x != nil {
		return x.ISACTIVE
	}
	return false
}

func (x *FindPartnerByEmailResponse) GetISBLOCKED() bool {
	if x != nil {
		return x.ISBLOCKED
	}
	return false
}

func (x *FindPartnerByEmailResponse) GetISBLACKLIST() bool {
	if x != nil {
		return x.ISBLACKLIST
	}
	return false
}

// update user verify
type UpdatePartnerVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PARTNERID uint64 `protobuf:"varint,1,opt,name=PARTNERID,proto3" json:"PARTNERID,omitempty"`
}

func (x *UpdatePartnerVerifyRequest) Reset() {
	*x = UpdatePartnerVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartnerVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartnerVerifyRequest) ProtoMessage() {}

func (x *UpdatePartnerVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartnerVerifyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePartnerVerifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePartnerVerifyRequest) GetPARTNERID() uint64 {
	if x != nil {
		return x.PARTNERID
	}
	return 0
}

// find user by phone
type FindPartnerByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MOBILE string `protobuf:"bytes,1,opt,name=MOBILE,proto3" json:"MOBILE,omitempty"`
}

func (x *FindPartnerByPhoneRequest) Reset() {
	*x = FindPartnerByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPartnerByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPartnerByPhoneRequest) ProtoMessage() {}

func (x *FindPartnerByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPartnerByPhoneRequest.ProtoReflect.Descriptor instead.
func (*FindPartnerByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{12}
}

func (x *FindPartnerByPhoneRequest) GetMOBILE() string {
	if x != nil {
		return x.MOBILE
	}
	return ""
}

type FindPartnerByPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PARTNERID   uint64 `protobuf:"varint,1,opt,name=PARTNERID,proto3" json:"PARTNERID,omitempty"`
	FIRSTNAME   string `protobuf:"bytes,2,opt,name=FIRSTNAME,proto3" json:"FIRSTNAME,omitempty"`
	MIDDLENAME  string `protobuf:"bytes,3,opt,name=MIDDLENAME,proto3" json:"MIDDLENAME,omitempty"`
	LASTNAME    string `protobuf:"bytes,4,opt,name=LASTNAME,proto3" json:"LASTNAME,omitempty"`
	MOBILE      string `protobuf:"bytes,5,opt,name=MOBILE,proto3" json:"MOBILE,omitempty"`
	ACCOUNTNO   string `protobuf:"bytes,6,opt,name=ACCOUNTNO,proto3" json:"ACCOUNTNO,omitempty"`
	AGE         uint64 `protobuf:"varint,7,opt,name=AGE,proto3" json:"AGE,omitempty"`
	GENDER      string `protobuf:"bytes,8,opt,name=GENDER,proto3" json:"GENDER,omitempty"`
	Account     string `protobuf:"bytes,9,opt,name=account,proto3" json:"account,omitempty"`
	EMAIL       string `protobuf:"bytes,10,opt,name=EMAIL,proto3" json:"EMAIL,omitempty"`
	USERNAME    string `protobuf:"bytes,11,opt,name=USERNAME,proto3" json:"USERNAME,omitempty"`
	PASSWORD    string `protobuf:"bytes,12,opt,name=PASSWORD,proto3" json:"PASSWORD,omitempty"`
	ISACTIVE    bool   `protobuf:"varint,13,opt,name=ISACTIVE,proto3" json:"ISACTIVE,omitempty"`
	ISBLOCKED   bool   `protobuf:"varint,14,opt,name=ISBLOCKED,proto3" json:"ISBLOCKED,omitempty"`
	ISBLACKLIST bool   `protobuf:"varint,15,opt,name=ISBLACKLIST,proto3" json:"ISBLACKLIST,omitempty"`
}

func (x *FindPartnerByPhoneResponse) Reset() {
	*x = FindPartnerByPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPartnerByPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPartnerByPhoneResponse) ProtoMessage() {}

func (x *FindPartnerByPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPartnerByPhoneResponse.ProtoReflect.Descriptor instead.
func (*FindPartnerByPhoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{13}
}

func (x *FindPartnerByPhoneResponse) GetPARTNERID() uint64 {
	if x != nil {
		return x.PARTNERID
	}
	return 0
}

func (x *FindPartnerByPhoneResponse) GetFIRSTNAME() string {
	if x != nil {
		return x.FIRSTNAME
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetMIDDLENAME() string {
	if x != nil {
		return x.MIDDLENAME
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetLASTNAME() string {
	if x != nil {
		return x.LASTNAME
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetMOBILE() string {
	if x != nil {
		return x.MOBILE
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetACCOUNTNO() string {
	if x != nil {
		return x.ACCOUNTNO
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetAGE() uint64 {
	if x != nil {
		return x.AGE
	}
	return 0
}

func (x *FindPartnerByPhoneResponse) GetGENDER() string {
	if x != nil {
		return x.GENDER
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetEMAIL() string {
	if x != nil {
		return x.EMAIL
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetUSERNAME() string {
	if x != nil {
		return x.USERNAME
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetPASSWORD() string {
	if x != nil {
		return x.PASSWORD
	}
	return ""
}

func (x *FindPartnerByPhoneResponse) GetISACTIVE() bool {
	if x != nil {
		return x.ISACTIVE
	}
	return false
}

func (x *FindPartnerByPhoneResponse) GetISBLOCKED() bool {
	if x != nil {
		return x.ISBLOCKED
	}
	return false
}

func (x *FindPartnerByPhoneResponse) GetISBLACKLIST() bool {
	if x != nil {
		return x.ISBLACKLIST
	}
	return false
}

type GetPartnerProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PARTNERID uint64 `protobuf:"varint,1,opt,name=PARTNERID,proto3" json:"PARTNERID,omitempty"`
}

func (x *GetPartnerProfileRequest) Reset() {
	*x = GetPartnerProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerProfileRequest) ProtoMessage() {}

func (x *GetPartnerProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerProfileRequest.ProtoReflect.Descriptor instead.
func (*GetPartnerProfileRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{14}
}

func (x *GetPartnerProfileRequest) GetPARTNERID() uint64 {
	if x != nil {
		return x.PARTNERID
	}
	return 0
}

type GetPartnerProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FIRSTNAME  string `protobuf:"bytes,1,opt,name=FIRSTNAME,proto3" json:"FIRSTNAME,omitempty"`
	MIDDLENAME string `protobuf:"bytes,2,opt,name=MIDDLENAME,proto3" json:"MIDDLENAME,omitempty"`
	LASTNAME   string `protobuf:"bytes,3,opt,name=LASTNAME,proto3" json:"LASTNAME,omitempty"`
	MOBILE     uint64 `protobuf:"varint,4,opt,name=MOBILE,proto3" json:"MOBILE,omitempty"`
	ACCOUNTNO  string `protobuf:"bytes,5,opt,name=ACCOUNTNO,proto3" json:"ACCOUNTNO,omitempty"`
	AGE        uint64 `protobuf:"varint,6,opt,name=AGE,proto3" json:"AGE,omitempty"`
	GENDER     string `protobuf:"bytes,7,opt,name=GENDER,proto3" json:"GENDER,omitempty"`
	Account    string `protobuf:"bytes,8,opt,name=account,proto3" json:"account,omitempty"`
	EMAIL      string `protobuf:"bytes,9,opt,name=EMAIL,proto3" json:"EMAIL,omitempty"`
	USERNAME   string `protobuf:"bytes,10,opt,name=USERNAME,proto3" json:"USERNAME,omitempty"`
	PASSWORD   string `protobuf:"bytes,11,opt,name=PASSWORD,proto3" json:"PASSWORD,omitempty"`
}

func (x *GetPartnerProfileResponse) Reset() {
	*x = GetPartnerProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerProfileResponse) ProtoMessage() {}

func (x *GetPartnerProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerProfileResponse.ProtoReflect.Descriptor instead.
func (*GetPartnerProfileResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{15}
}

func (x *GetPartnerProfileResponse) GetFIRSTNAME() string {
	if x != nil {
		return x.FIRSTNAME
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetMIDDLENAME() string {
	if x != nil {
		return x.MIDDLENAME
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetLASTNAME() string {
	if x != nil {
		return x.LASTNAME
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetMOBILE() uint64 {
	if x != nil {
		return x.MOBILE
	}
	return 0
}

func (x *GetPartnerProfileResponse) GetACCOUNTNO() string {
	if x != nil {
		return x.ACCOUNTNO
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetAGE() uint64 {
	if x != nil {
		return x.AGE
	}
	return 0
}

func (x *GetPartnerProfileResponse) GetGENDER() string {
	if x != nil {
		return x.GENDER
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetEMAIL() string {
	if x != nil {
		return x.EMAIL
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetUSERNAME() string {
	if x != nil {
		return x.USERNAME
	}
	return ""
}

func (x *GetPartnerProfileResponse) GetPASSWORD() string {
	if x != nil {
		return x.PASSWORD
	}
	return ""
}

var File_proto_user_proto protoreflect.FileDescriptor

var file_proto_user_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x97, 0x02, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x2b, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x16, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x87, 0x02,
	0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x32, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x16, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x17,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd6, 0x02, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x49,
	0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x41,
	0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x41,
	0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x4e, 0x4f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x4e, 0x4f, 0x12, 0x38, 0x0a, 0x17,
	0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x54, 0x59, 0x50, 0x45, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x57,
	0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x54, 0x59, 0x50, 0x45, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x47, 0x45, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x41, 0x47, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41,
	0x4d, 0x45, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41,
	0x4d, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x22, 0x33,
	0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45,
	0x52, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x22, 0xb8, 0x03, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x41, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x41, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x4d,
	0x4f, 0x42, 0x49, 0x4c, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x4f, 0x42,
	0x49, 0x4c, 0x45, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x4e, 0x4f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x4e,
	0x4f, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x47, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x41, 0x47, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57,
	0x4f, 0x52, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57,
	0x4f, 0x52, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x53, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x49, 0x53, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x53, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x49, 0x53, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x22,
	0x3a, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x19, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x4f, 0x42, 0x49,
	0x4c, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45,
	0x22, 0xb8, 0x03, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x1e, 0x0a, 0x0a, 0x4d,
	0x49, 0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x41, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c,
	0x41, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c,
	0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x4e, 0x4f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x4e, 0x4f, 0x12, 0x10, 0x0a,
	0x03, 0x41, 0x47, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x41, 0x47, 0x45, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x53, 0x45, 0x52, 0x4e,
	0x41, 0x4d, 0x45, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x53, 0x45, 0x52, 0x4e,
	0x41, 0x4d, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x53, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x49, 0x53, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x53, 0x42,
	0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x49, 0x53, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x22, 0x38, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x54, 0x4e,
	0x45, 0x52, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x41, 0x52, 0x54,
	0x4e, 0x45, 0x52, 0x49, 0x44, 0x22, 0xbd, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x49, 0x52, 0x53, 0x54, 0x4e, 0x41, 0x4d,
	0x45, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x4e, 0x41, 0x4d,
	0x45, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x41, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x41, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4d,
	0x4f, 0x42, 0x49, 0x4c, 0x45, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x4e, 0x4f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x4e, 0x4f, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x47, 0x45, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x41, 0x47, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x41, 0x53,
	0x53, 0x57, 0x4f, 0x52, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x41, 0x53,
	0x53, 0x57, 0x4f, 0x52, 0x44, 0x32, 0xd0, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x12,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_proto_rawDescOnce sync.Once
	file_proto_user_proto_rawDescData = file_proto_user_proto_rawDesc
)

func file_proto_user_proto_rawDescGZIP() []byte {
	file_proto_user_proto_rawDescOnce.Do(func() {
		file_proto_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_proto_rawDescData)
	})
	return file_proto_user_proto_rawDescData
}

var file_proto_user_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_user_proto_goTypes = []interface{}{
	(*SaveUserRequest)(nil),            // 0: pb.SaveUserRequest
	(*SaveUserResponse)(nil),           // 1: pb.SaveUserResponse
	(*FindUserByEmailRequest)(nil),     // 2: pb.FindUserByEmailRequest
	(*FindUserByEmailResponse)(nil),    // 3: pb.FindUserByEmailResponse
	(*UpdateUserVerifyRequest)(nil),    // 4: pb.UpdateUserVerifyRequest
	(*FindUserByPhoneRequest)(nil),     // 5: pb.FindUserByPhoneRequest
	(*FindUserByPhoneResponse)(nil),    // 6: pb.FindUserByPhoneResponse
	(*SavePartnerRequest)(nil),         // 7: pb.SavePartnerRequest
	(*SavePartnerResponse)(nil),        // 8: pb.SavePartnerResponse
	(*FindPartnerEmailRequest)(nil),    // 9: pb.FindPartnerEmailRequest
	(*FindPartnerByEmailResponse)(nil), // 10: pb.FindPartnerByEmailResponse
	(*UpdatePartnerVerifyRequest)(nil), // 11: pb.UpdatePartnerVerifyRequest
	(*FindPartnerByPhoneRequest)(nil),  // 12: pb.FindPartnerByPhoneRequest
	(*FindPartnerByPhoneResponse)(nil), // 13: pb.FindPartnerByPhoneResponse
	(*GetPartnerProfileRequest)(nil),   // 14: pb.GetPartnerProfileRequest
	(*GetPartnerProfileResponse)(nil),  // 15: pb.GetPartnerProfileResponse
}
var file_proto_user_proto_depIdxs = []int32{
	0,  // 0: pb.UserService.SaveUser:input_type -> pb.SaveUserRequest
	2,  // 1: pb.UserService.FindUserByEmail:input_type -> pb.FindUserByEmailRequest
	5,  // 2: pb.UserService.FindUserByPhone:input_type -> pb.FindUserByPhoneRequest
	7,  // 3: pb.UserService.SavePartner:input_type -> pb.SavePartnerRequest
	9,  // 4: pb.UserService.FindPartnerByEmail:input_type -> pb.FindPartnerEmailRequest
	12, // 5: pb.UserService.FindPartnerByPhone:input_type -> pb.FindPartnerByPhoneRequest
	1,  // 6: pb.UserService.SaveUser:output_type -> pb.SaveUserResponse
	3,  // 7: pb.UserService.FindUserByEmail:output_type -> pb.FindUserByEmailResponse
	6,  // 8: pb.UserService.FindUserByPhone:output_type -> pb.FindUserByPhoneResponse
	8,  // 9: pb.UserService.SavePartner:output_type -> pb.SavePartnerResponse
	10, // 10: pb.UserService.FindPartnerByEmail:output_type -> pb.FindPartnerByEmailResponse
	13, // 11: pb.UserService.FindPartnerByPhone:output_type -> pb.FindPartnerByPhoneResponse
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_user_proto_init() }
func file_proto_user_proto_init() {
	if File_proto_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePartnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePartnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPartnerEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPartnerByEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartnerVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPartnerByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPartnerByPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_proto_goTypes,
		DependencyIndexes: file_proto_user_proto_depIdxs,
		MessageInfos:      file_proto_user_proto_msgTypes,
	}.Build()
	File_proto_user_proto = out.File
	file_proto_user_proto_rawDesc = nil
	file_proto_user_proto_goTypes = nil
	file_proto_user_proto_depIdxs = nil
}
