// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.8
// source: proto/merchant.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// Merchan_PURCHISE_SERVICEClient is the client API for Merchan_PURCHISE_SERVICE service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type Merchan_PURCHISE_SERVICEClient interface {
	SEND_MERCHAN_API_PURCHASE_REQ(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Merchan_PURCHISE_RESPONSE, error)
}

type merchan_PURCHISE_SERVICEClient struct {
	cc grpc.ClientConnInterface
}

func NewMerchan_PURCHISE_SERVICEClient(cc grpc.ClientConnInterface) Merchan_PURCHISE_SERVICEClient {
	return &merchan_PURCHISE_SERVICEClient{cc}
}

func (c *merchan_PURCHISE_SERVICEClient) SEND_MERCHAN_API_PURCHASE_REQ(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Merchan_PURCHISE_RESPONSE, error) {
	out := new(Merchan_PURCHISE_RESPONSE)
	err := c.cc.Invoke(ctx, "/pb.Merchan_PURCHISE_SERVICE/SEND_MERCHAN_API_PURCHASE_REQ", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Merchan_PURCHISE_SERVICEServer is the server API for Merchan_PURCHISE_SERVICE service.
// All implementations must embed UnimplementedMerchan_PURCHISE_SERVICEServer
// for forward compatibility
type Merchan_PURCHISE_SERVICEServer interface {
	SEND_MERCHAN_API_PURCHASE_REQ(context.Context, *Request) (*Merchan_PURCHISE_RESPONSE, error)
	mustEmbedUnimplementedMerchan_PURCHISE_SERVICEServer()
}

// UnimplementedMerchan_PURCHISE_SERVICEServer must be embedded to have forward compatible implementations.
type UnimplementedMerchan_PURCHISE_SERVICEServer struct {
}

func (UnimplementedMerchan_PURCHISE_SERVICEServer) SEND_MERCHAN_API_PURCHASE_REQ(context.Context, *Request) (*Merchan_PURCHISE_RESPONSE, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SEND_MERCHAN_API_PURCHASE_REQ not implemented")
}
func (UnimplementedMerchan_PURCHISE_SERVICEServer) mustEmbedUnimplementedMerchan_PURCHISE_SERVICEServer() {
}

// UnsafeMerchan_PURCHISE_SERVICEServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to Merchan_PURCHISE_SERVICEServer will
// result in compilation errors.
type UnsafeMerchan_PURCHISE_SERVICEServer interface {
	mustEmbedUnimplementedMerchan_PURCHISE_SERVICEServer()
}

func RegisterMerchan_PURCHISE_SERVICEServer(s grpc.ServiceRegistrar, srv Merchan_PURCHISE_SERVICEServer) {
	s.RegisterService(&Merchan_PURCHISE_SERVICE_ServiceDesc, srv)
}

func _Merchan_PURCHISE_SERVICE_SEND_MERCHAN_API_PURCHASE_REQ_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Merchan_PURCHISE_SERVICEServer).SEND_MERCHAN_API_PURCHASE_REQ(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Merchan_PURCHISE_SERVICE/SEND_MERCHAN_API_PURCHASE_REQ",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Merchan_PURCHISE_SERVICEServer).SEND_MERCHAN_API_PURCHASE_REQ(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

// Merchan_PURCHISE_SERVICE_ServiceDesc is the grpc.ServiceDesc for Merchan_PURCHISE_SERVICE service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Merchan_PURCHISE_SERVICE_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Merchan_PURCHISE_SERVICE",
	HandlerType: (*Merchan_PURCHISE_SERVICEServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SEND_MERCHAN_API_PURCHASE_REQ",
			Handler:    _Merchan_PURCHISE_SERVICE_SEND_MERCHAN_API_PURCHASE_REQ_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/merchant.proto",
}
