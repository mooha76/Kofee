syntax = "proto3";

package pb;
option go_package = "./pb";


service AuthService {
    rpc UserSingUp(UserSignupRequest) returns (UserSignupResponse){};
    //rpc PartnerSingUp(PartnerSingUpRequest) returns (PartnerSingUpResponse) {};
    rpc PartnerSingUp(PartnerSingUpRequest) returns (PartnerSingUpResponse){};
    
}

// user signup
message UserSignupRequest {
    string first_name = 1;
    string middle_name=2;
    string last_name = 3;
    uint64 age = 4;
    string gender =5;
    string email = 6;
    string phone  = 7;
    string account =8;
    string password = 9;
}
message UserSignupResponse{
    string user_Id = 1;
}

// signup verification
message UserSignupVerifyRequest {
    string otp_id = 1;
    string otp_code = 2;
}
message UserSignupVerifyResponse {
    string access_token = 1;
    string refresh_token = 2;
}

// verify access token
message VerifyUserAccessTokenRequest{
    string access_token = 1;
}
message VerifyUserAccessTokenResponse{
    uint64 user_id = 1;
}

// refresh access token
message RefreshAccessTokenRequest {
    enum UserType {
        User = 0;
        Admin = 1;
    }
    UserType used_for = 1;
    string refresh_token = 2;
}
message RefreshAccessTokenResponse{
    string access_token = 1;
}

// user login
message UserLoginRequest {
    string email = 1;
    string phone = 2;
    string password = 3;
}

message UserLoginResponse {
    string access_token = 1;
    string refresh_token = 2;
}



// save Partner
message PartnerSingUpRequest {
    string FIRSTNAME = 1;
    string MIDDLENAME=2;
    string LASTNAME = 3;
    string MOBILE = 4;
    string ACCOUNTNO =5;
    uint64 WITHDRAWALREQUESTTYPEID =6;
    uint64 AGE = 7;
    string GENDER  = 8;
    string EMAIL = 9;
    string USERNAME = 10;
    string PASSWORD = 11;


}
message PartnerSingUpResponse{
    uint64 PARTNERID = 1;
}

// find user by email
message FindPartnerEmailRequest {
    string EMAIL = 1;
}

message FindPartnerByEmailResponse {
    uint64 PARTNERID=1;
    string FIRSTNAME = 2;
    string MIDDLENAME=3;
    string LASTNAME = 4;
    string MOBILE = 5;
    string ACCOUNTNO =6;
    uint64 AGE = 7;
    string GENDER  = 8;
    string account =9;
    string EMAIL = 10;
    string USERNAME = 11;
    string PASSWORD = 12;
    bool ISACTIVE  =13;
    bool ISBLOCKED  =14;
    bool ISBLACKLIST  = 15;

}

// update user verify
message UpdatePartnerVerifyRequest {
    uint64 PARTNERID = 1;
}


// find user by phone
message FindPartnerByPhoneRequest {
    string MOBILE = 1;
}
message FindPartnerByPhoneResponse {
    uint64 PARTNERID=1;
    string FIRSTNAME = 2;
    string MIDDLENAME=3;
    string LASTNAME = 4;
    string MOBILE = 5;
    string ACCOUNTNO =6;
    uint64 AGE = 7;
    string GENDER  = 8;
    string account =9;
    string EMAIL = 10;
    string USERNAME = 11;
    string PASSWORD = 12;
    bool ISACTIVE  =13;
    bool ISBLOCKED  =14;
    bool ISBLACKLIST  = 15;
}

